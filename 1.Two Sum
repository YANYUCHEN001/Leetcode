"""
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
"""
"""解题思路：
  1.第一种思路是通过两重for循环来遍历，找到符合结果的组合。但是时间复杂度很高，不通过。
  2.第二种思路是通过hash字典来查找。（hash字典学过，但是用的不是很灵活，所以也当复习巩固了）
"""
#第一种思路
def twosum(nums,target):
    for i in range(len(nums) - 1):
            for j in range(i+1, len(nums)):
                if nums[i] + nums[j] == target:
                    print([i, j])

nums=[1,2,4,5,6,7,8,3]
target=11
result=twosum(nums,target)

#第二种思路
class Solution:
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        d = dict()
        
        for i in range(len(nums)):
            num1 = nums[i]
            num2 = target - num1
            
            if num2 in d:
                return [d[num2]-1,i]
            else:
                d[num1] = i + 1
                
        return []
  
  
