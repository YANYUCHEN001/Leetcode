class Solution(object):
    def isHappy(self, n):
        """
        :type n: int
        :rtype: bool
        """
        circleloop = set()
        while(n not in circleloop):
            circleloop.add(n)
            n = sum(int(i)**2 for i in str(n))
        return n==1
        
        
#解题思路：如果这个数的每一位数的平方和为1，那么这个数为happy number；如果陷入循环里面，但是不包括1，以1为终止的这个数也为happy number。
#知识检查：
        1.如何将一个数（两位以上）的每一位数字分离出来？ 思路1：运用数学方法，用地板除//再加上求余%。例如98//10=9. 98%10=8;思路2:利用编程语言的特性，
        将str和int互相转换。比如：
>>> sam=0
>>> for i in str(98):
	sam=sam+int(i)**2
>>> sam
145
>>> print(sam)
145
#从中可以看出将数拆开成数字的另一种方法 str and int.
        2.第一步中将数字的平方和求出来后，接着就是判断这个和是否满足题目的要求。如果平方和是1，那么这个数字就是happy number。如何这个和不为1，
        那么进入循环，循环终止的条件是两个：第一个为出现了1.第二个是出现了循环重复值。如何判断是否出现循环重复值，那就是将每次所产生的循环值存储
        起来，要么是放在字典要么是放在集合里面。每次循环时候都判断一次，如果新产生的值不在集合里面，那么像集合里面添加这个新的值，继续循环。如何
        新的值已经存在在循环里面，那么循环终止。最后return时候对比是否==1。等于1 则为happy number。
        3.事实上分析题目的思路可以顺推和倒推。我感觉倒推比较容易出框架，比如如何判断是否是happynumber。则需要将最终值n与1比较。为了得到最终值，
        我们需要算出这个最终值，也就是说如何将数字分解成平方和。但是一次算出来的结果肯定不能循环呀，所以需要一个循环结构。循环结构里面加上限制条件，
        这个代码的框架就出来了。
        
        
